RequestPart 와 RequestParam 의 차이점

파일 업로드 때는 RequestPart

쿼리스트링에 있는 값 받을 때 RequestParam

json에 있는 데이터를 받고 싶을 때 RequestBody

-----------------------------------------------------------------------

http의 통신의 특징??
요청이 있어야 응답이있다.

-----------------------------------------------------------------------
java의 dao 패키지
외부라이브러리 사용할수있도록 셋팅,...


프로젝트 선택 오른쪽 아무스 / open modules Settings / Modules / java / Dependencies / + / jar / C:\Users\Administrator\.m2\repository\org\mariadb\jdbc\mariadb-java-client\3.1.4\mariadb-java-client-3.1.4.jar /선택후 ok


-----------------------------------------


+++++++++++++++++++++++++++++++

package com.green.java.dao;

import java.sql.Connection;
import java.sql.SQLException;

public class MyConnTest {
    public static void main(String[] args) {
        MyConnection mc = new MyConnection();
        try {
            Connection con = mc.getConn();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
}


---------------------------------------------------







package com.green.java.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class MyConnection {
    private final String DRIVER = "org.mariadb.jdbc.Driver";
    private final String HOST = "192.168.0.144";
    private final String PORT = "3306";
    private final String DB_NAME = "team_g";
    private final String URL;
    private final String USERNAME = "team_g";
    private final String PASSWORD = "green502";

    public MyConnection() {
        this.URL = String.format("jdbc:mariadb://%s:%s/%s", HOST, PORT, DB_NAME);
    }

    public Connection getConn() throws SQLException, ClassNotFoundException {
        Class.forName(DRIVER);
        Connection con = DriverManager.getConnection(URL, USERNAME, PASSWORD);
        System.out.println("DB 접속 완료!");
        return con;
    }
}


++++++++++++++++++++++


package com.green.java.dao.model;

public class BoardEntity {
    private int iboard;
    private String title;
    private String ctnt;
    private int iuser;
    private String createdAt;
    private String updatedAt;

    public int getIboard() {
        return iboard;
    }

    public void setIboard(int iboard) {
        this.iboard = iboard;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getCtnt() {
        return ctnt;
    }

    public void setCtnt(String ctnt) {
        this.ctnt = ctnt;
    }

    public int getIuser() {
        return iuser;
    }

    public void setIuser(int iuser) {
        this.iuser = iuser;
    }

    public String getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    public String getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }
}


++++++++++++++++++++++

package com.green.java.dao;

import com.green.java.dao.model.BoardEntity;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class BoardDao {
    private MyConnection mc;
    public BoardDao() {
        mc = new MyConnection();
    }
    public int insBoard(BoardEntity entity) {
        int result = 0;
        String sql = "INSERT INTO t_board"+
                    " SET title = '" + entity.getTitle() + "'" +
                    " , ctnt = '" + entity.getCtnt() + "'" +
                    " , iuser = " +entity.getIuser();
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }
}


>>>>>>>>>>>>>>>>>>>

package com.green.java.dao;

import com.green.java.dao.model.BoardEntity;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class BoardDao {
    private MyConnection mc;
    public BoardDao() {
        mc = new MyConnection();
    }
    public int insBoard(BoardEntity entity) {
        int result = 0;
        String sql = "INSERT INTO t_board "+
                    " SET title = ? " +
                    " , ctnt = ? " +
                    " , iuser = ? ";
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setString(1, entity.getTitle());
            ps.setString(2, entity.getCtnt());
            ps.setInt(3, entity.getIboard());

            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }
}

>>>>>>>>>>>>>>>>>>>>>>>

package com.green.java.dao;

import com.green.java.dao.model.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class BoardDao {
    private MyConnection mc;
    public BoardDao() {
        mc = new MyConnection();
    }
    public int insBoard(BoardEntity entity) {
        int result = 0;
        String sql = "INSERT INTO t_board_1 "+
                    " SET title = ? " +
                    " , ctnt = ? " +
                    " , iuser = ? ";
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setString(1, entity.getTitle());
            ps.setString(2, entity.getCtnt());
            ps.setInt(3, entity.getIboard());

            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    public int updBoard(BoardUpdDto dto) {
        int result = 0;
        String sql = "UPDATE t_board_1 "+
                " SET title = ? " +
                " , ctnt = ? " +
                ", updated_at = current_timestamp() " +
                " WHERE iboard = ? " +
                " AND iuser = ? ";
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setString(1, dto.getTitle());
            ps.setString(2, dto.getCtnt());
            ps.setInt(3, dto.getIboard());
            ps.setInt(4, dto.getIuser());

            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    BoardDetailVo selBoardDetail(BoardSelDto dto) {
        String sql = " SELECT a.iboard, a.title, a.ctnt, a.created_at createdAt\n" +
                " , b.nm writer, b.main_pic writerMainPic\n" +
                " FROM t_board_1 a\n" +
                " INNER JOIN t_user_1 b\n" +
                " ON a.iuser = b.iuser\n" +
                " WHERE iboard = ?";
        System.out.println(sql);
        BoardDetailVo vo = null;
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setInt(1, dto.getIboard());
            rs = ps.executeQuery();
            if(rs.next()) {
                int iboard = rs.getInt("iboard");
                String title = rs.getString("title");
                String ctnt = rs.getString("ctnt");
                String createdAt = rs.getString("createdAt");
                String writer = rs.getString("writer");
                String writerMainPic = rs.getString("writerMainPic");
                vo = new BoardDetailVo(iboard, title, ctnt, createdAt, writer, writerMainPic);
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }

        return vo;
    }
}


-------------------------------------------------------------------------------------



>>>>>>>>>>>>>>>>
package com.green.java.dao;

import com.green.java.dao.model.BoardEntity;
import com.green.java.dao.model.BoardUpdDto;

import java.sql.Connection;
import java.sql.SQLException;

public class MyConnTest {
    public static void main(String[] args) {
        BoardDao b1 = new BoardDao();

        BoardUpdDto dto = new BoardUpdDto();
        dto.setTitle("제목을");
        dto.setCtnt("내용을");
        dto.setIboard(1);
        dto.setIuser(1);
        int result = b1.updBoard(dto);
        System.out.println("result :" +result);


    }
}


>>>>>>>>>>>>

public class MyConnTest {
    public static void main(String[] args) {
        BoardDao b1 = new BoardDao();

        BoardSelDto dto = new BoardSelDto();
        dto.setIboard(1);

        BoardDetailVo result = b1.selBoardDetail(dto);
        System.out.println("r: " + result);

    }
}




------------------------------------------------------------------------------
package com.green.java.dao;

import com.green.java.dao.model.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class BoardDao {
    private MyConnection mc;
    public BoardDao() {
        mc = new MyConnection();
    }
    public int insBoard(BoardEntity entity) {
        int result = 0;
        String sql = "INSERT INTO t_board_1 "+
                    " SET title = ? " +
                    " , ctnt = ? " +
                    " , iuser = ? ";
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setString(1, entity.getTitle());
            ps.setString(2, entity.getCtnt());
            ps.setInt(3, entity.getIboard());

            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    public int updBoard(BoardUpdDto dto) {
        int result = 0;
        String sql = "UPDATE t_board_1 "+
                " SET title = ? " +
                " , ctnt = ? " +
                ", updated_at = current_timestamp() " +
                " WHERE iboard = ? " +
                " AND iuser = ? ";
        System.out.println(sql);
        Connection con = null;
        PreparedStatement ps = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setString(1, dto.getTitle());
            ps.setString(2, dto.getCtnt());
            ps.setInt(3, dto.getIboard());
            ps.setInt(4, dto.getIuser());

            result = ps.executeUpdate();

        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        } finally {
            if (ps !=null) {
                try{
                    ps.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
            if(con != null) {
                try {
                    con.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return result;
    }

    List<BoardVo> selBoard(BoardSelDto dto) {
        List<BoardVo> list = new ArrayList();
        String sql = " SELECT a.iboard, a.title, a.created_at createdAt\n" +
                " , b.nm writer, b.main_pic writerMainPic\n" +
                " FROM t_board_1 a\n" +
                " INNER JOIN t_user_1 b\n" +
                " ON a.iuser = b.iuser\n" +
                "ORDER BY iboard DESC " +
                " LIMIT ?,? ";

        System.out.println(sql);
        PreparedStatement ps = null;
        Connection con = null;
        ResultSet rs = null;

        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setInt(1, dto.getStartIdx());
            ps.setInt(2, dto.getRowLen());
            rs = ps.executeQuery();

            while (rs.next()) {
                int iboard = rs.getInt("iboard");
                String title = rs.getString("title");
                String createdAt = rs.getString("createdAt");
                String writer = rs.getString("writer");
                String writerMainPic = rs.getString("writerMainPic");
                BoardVo vo = new BoardVo(iboard, title, createdAt, writer, writerMainPic);
                list.add(vo);
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }


        return list;
    }

    BoardDetailVo selBoardDetail(BoardSelDto dto) {
        String sql = " SELECT a.iboard, a.title, a.ctnt, a.created_at createdAt\n" +
                " , b.nm writer, b.main_pic writerMainPic\n" +
                " FROM t_board_1 a\n" +
                " INNER JOIN t_user_1 b\n" +
                " ON a.iuser = b.iuser\n" +
                " WHERE iboard = ?";
        System.out.println(sql);
        BoardDetailVo vo = null;
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            con = mc.getConn();
            ps = con.prepareStatement(sql);
            ps.setInt(1, dto.getIboard());
            rs = ps.executeQuery();
            if(rs.next()) {
                int iboard = rs.getInt("iboard");
                String title = rs.getString("title");
                String ctnt = rs.getString("ctnt");
                String createdAt = rs.getString("createdAt");
                String writer = rs.getString("writer");
                String writerMainPic = rs.getString("writerMainPic");
                vo = new BoardDetailVo(iboard, title, ctnt, createdAt, writer, writerMainPic);
            }
        } catch (SQLException e) {
            throw new RuntimeException(e);
        } catch (ClassNotFoundException e) {
            throw new RuntimeException(e);
        }

        return vo;
    }


}

++++++++++++++++++++++++++

package com.green.java.dao.model;

public class BoardVo {
    private int iboard;
    private String title;
    private String createdAt;
    private String writer;
    private String writerMainPic;

    public BoardVo(int iboard, String title, String createdAt, String writer, String writerMainPic) {
        this.iboard = iboard;
        this.title = title;
        this.createdAt = createdAt;
        this.writer = writer;
        this.writerMainPic = writerMainPic;
    }

    public int getIboard() {
        return iboard;
    }

    public String getTitle() {
        return title;
    }

    public String getCreatedAt() {
        return createdAt;
    }

    public String getWriter() {
        return writer;
    }

    public String getWriterMainPic() {
        return writerMainPic;
    }

    @Override
    public String toString() {
        return String.format("iboard: %d, title: %s, createdAt: %s, writer: %s, writerMainPic: %s",
                iboard, title, createdAt, writer, writerMainPic);
    }
}


++++++++++++++++

package com.green.java.dao;

import com.green.java.dao.model.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class MyConnTest {
    public static void main(String[] args) {
        BoardDao b1 = new BoardDao();

        BoardSelDto dto = new BoardSelDto();
        dto.setPage(3);
        dto.setRowLen(30);
        dto.setStartIdx((dto.getPage() -1)* dto.getRowLen());



        List<BoardVo> list =  b1.selBoard(dto);
        for(BoardVo vo : list) {
            System.out.println(vo);
        }

    }
}




------------------------------------------------------------------------------



간단한 테이블 만들어보기

CREATE TABLE t_todo(
	itodo BIGINT UNSIGNED AUTO_INCREMENT,
	ctnt VARCHAR(100) NOT NULL,
	created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
	del_yn TINYINT DEFAULT 0 CHECK(del_yn IN (0,1)),
	PRIMARY KEY(itodo)
);

ALTER TABLE t_todo ADD COLUMN pic VARCHAR(100);





































































































































