-- amount는 판매금액,  직원별 평균 판매금액 알고 싶다.
SELECT staff_id, avg(amount)
FROM payment
GROUP BY staff_id;

>>>>>>>>>>>>>>

-- 스태프의 이름 추가 
SELECT p.staff_id, s.first_name, s.last_name, AVG(p.amount) AS avg_amount
FROM payment p
	INNER JOIN staff s
	ON p.staff_id = s.staff_id
GROUP BY p.staff_id;

------------------------------------------------------------------

-- 스칼라 scala 컬럼과 레코드가 한개인 결과값


------------------------------------------------------------------
C:\Windows\system32>d:

D:\>cd employees

D:\employees>mysql -uroot -p
Enter password: ********
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 4
Server version: 10.11.2-MariaDB mariadb.org binary distribution

Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> source employees.sql;

--------------------------------------------------------------------
 employmees 의 테이블 구조

- departments 부서명

- dept_emp 소속 히스토리

- salaries 연봉 히스토리

- dept_manager 그 부서의 매니저

- title 직책

-------------------------------------------------------------------
-- 직원 남녀 숫자 알고 싶음.
SELECT gender, count(*)
FROM employees
GROUP BY gender;

-------------------------------------------------------------------
-- 사번, 이름, 성, 현재 부서가 어디인지 알고싶음.
SELECT B.emp_no, B.first_name, B.last_name, C.dept_no, C.dept_name
FROM dept_emp A
	INNER JOIN employees B
	ON B.emp_no = A.emp_no
	INNER JOIN departments C
	ON C.dept_no = A.dept_no
WHERE to_date = '9999-01-01';
-- 직원과 부서의 관계는 1:N 관계


------------------------------------------------------------------

p.119 와일드카드 사용
부분 문자열 일치를 검색할 대는 다음과 같은 사항이 궁금할 수 있습니다...
와일드 카드 문자 / 일치
_	         /  정확히 한 문자
%	         /  개수에 상관없이 모든 문자(0 포함)

DB32

SELECT last_name, first_name
FROM customer
WHERE last_name LIKE '_A_T%S';


------------------------------------------------------------------
-- KIRK.STCLAIR@sakilacustomer.org
-- 고객 중에 이메일값이 다섯번째에 . 이있고 13번째가 @인 사람
SELECT *
FROM customer
WHERE email LIKE '____._______@%';

SELECT *
FROM customer
WHERE email LIKE '____.%' AND MID(email, 13, 1) = '@';


------------------------------------------------------------------
p.120 정규 표현식
정규표현식 테스트 사이트
https://regex101.com/

-- 성이 Q, Y 로 시작하는 사람들 알고 싶어.
SELECT *
FROM customer
WHERE last_name LIKE 'Q%' OR last_name LIKE 'Y%';

SELECT *
FROM customer
WHERE LEFT(last_name, 'Q') OR LEFT(last_name, 'Y')';

>>>>>>>>>>>>>>>>>>>>>

SELECT *
FROM customer
WHERE last_name REGEXP '^[QY]';
-- 정규식을 시작하겠다 ^

-- 시작을 찾으려면 ^ 
-- 끝을 찾으려면 $
-- 등등...
-- 기본적 일치, 모든 문자 하나와 일치합니다 .


-------------------------------------------------------------------
p.121 NULL
NULL은 컬럼에 값이 없는상태

-- null은 is null로 검색

-- 반납을 하지않은 고객들을 보고 싶을대
SELECT rental_id, customer_id
FROM rental
WHERE return_date IS NULL;

-------------------------------------------------------------------
AJAX통신...
Festful방식으로 json으로 반납하는??

뷰나 리액트...



-------------------------------------------------------------------
-- 반납일이'2005-05-01' ~ '2005-09-01'이 아닌 렌탈 정보 알고싶다
SELECT *
FROM rental
WHERE DATE(return_date) NOT BETWEEN '2005-05-01' AND  '2005-08-31'
OR return_date IS null;


-------------------------------------------------------------------
p.126~127  학습점검


-- 4.5.1
 101, 107

-- 4.5.2
-- 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120

-- 4.5.3
SELECT *
FROM payment
WHERE amount In (1.98, 7.98, 9.98);

-- 4.5.4
SELECT *
FROM customer
WHERE last_name LIKE '_A%W%';

--------------------------------------------------------------------
DB33
join

-- left join은 나오는것 보장 bout 내용이 없으면 null


SELECT *
FROM person;

SELECT A.food, A.person_id, B.person_id, B.fname, B.lname
FROM favorite_food A
	INNER JOIN person B
	ON A.person_id = B.person_id;


SELECT *
FROM person A
LEFT JOIN favorite_food B
ON A.person_id = B.person_id;


--------------------------------------------------------------------

-- 고객 id, 이름, 성, address, district값이 나오는 쿼리문 완성
SELECT A.customer_id, A.first_name, A.last_name, B.address, B.district
FROM customer A
	INNER JOIN address B
	ON A.address_id = B.address_id;

-- 같은 컬럼은 using을 사용할수있지만 권장하지 않음 다른 DB에서 사용 불가능할 수 있기 때문에
SELECT A.customer_id, A.first_name, A.last_name, B.address, B.district
FROM customer A
	INNER JOIN address B
	USING(address_id);

-- ANSI 조인 문법 존재하지만 쓰지 말것!
SELECT A.customer_id, A.first_name, A.last_name, B.address, B.district
FROM customer A, address B
WHERE A.address_id = B.address_id;

--------------------------------------------------------------------
-- 고객id, 이름, 성, 도시명 나오는 쿼리문 완성.
SELECT B.customer_id, B.first_name, B.last_name, A.address, C.city
FROM address A
	INNER JOIN customer B
	ON A.address_id = B.address_id
	INNER JOIN city C
	ON A.city_id = C.city_id;
	
-------------------------------------------------------------------
-- 'California'값만 알고있다. 미국 주중에 California에 사는 소비자 정보가 궁금하다

SELECT *
FROM customer A
	INNER JOIN address B
	ON A.address_id = B.address_id
WHERE B.district = 'California';


SELECT *
FROM customer
WHERE address_id IN (
	SELECT address_id FROM address
	WHERE district = 'California'
);

SELECT *
FROM customer A
INNER JOIN (
	SELECT address_id FROM address
	WHERE district = 'California'
) B
ON A.address_id = B.address_id;
-- 테이블자리에 있는 서브쿼리는 알리아스를 줘야한다.
-- 서브쿼리가 들어갈수 있는 자리: 테이블, where절, 컬럼자리(무조건 스칼라값)

SELECT address_id
FROM address
WHERE district = 'California';


-------------------------------------------------------------------
-- 배우이름 CATE MCQUEEN, CUBA BIRCH가 출연한 영화이름

SELECT DISTINCT C.title
FROM film_actor A
INNER JOIN (
	SELECT * FROM actor
	WHERE (first_name = 'CATE' AND last_name = 'MCQUEEN')
		OR (first_name = 'CUBA' AND last_name = 'BIRCH')
	) B
	ON A.actor_id = B.actor_id
INNER JOIN film C
ON C.film_id = A.film_id
ORDER BY C.title;


SELECT DISTINCT C.*
FROM actor A
INNER JOIN film_actor B
ON A.actor_id = B.actor_id
INNER JOIN film C
ON B.film_id = C.film_id
WHERE (first_name, last_name) IN (('CATE','MCQUEEN'),('CUBA','BIRCH'))
ORDER BY film_id;


-------------------------------------------------------------------
-- CATE MCQUEEN, CUBA BIRCH 밖에 모름 둘이 같이 출연한 영화이름

SELECT * 
FROM film F
INNER JOIN
(
	SELECT B.film_id FROM actor A
	INNER JOIN film_actor B
	ON A.actor_id = B.actor_id
	WHERE (first_name, last_name) IN (('CATE','MCQUEEN'),('CUBA','BIRCH'))
	GROUP BY B.film_id
	HAVING COUNT(*) = 2
) S
ON S.film_id = F.film_id; 

-- GROUP BY B.film_id 는 B.film_id을 기준으로 그룹을 만든다.
-- HAVING COUNT(*) = 2 는 구룹에 2가 들어있는 film_id만 뽑아낸다.
-- 82, 899두개,,,


--------------------------------------------------------------------------
p.143 셀프조인


country country_id
city city_id city country_id

country에 city가 몇개있는지 확인?

count가 1개 가 아닌 주소값을 모두 반환



































































































