파일 업로드관련
json으로 통신할 때


# db config
spring:
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 12MB
  mvc:
    static-path-pattern: /static/**
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://localhost:3306/board
    username: root
    password: green502


mybatis:
  type-aliases-package: com.green.board7
  mapper-locations: mapper/**/*.xml

# swagger
springdoc:
  swagger-ui:
    path: /swagger.html

file:
  dir: D:/download/

===================

파일 용량 조절
  servlet:
    multipart:
      max-file-size: 3MB
      max-request-size: 12MB

파일 위치 조절
file:
  dir: D:/download/


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

package com.green.board7.fileupload;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.UUID;

@Service
public class Fileuploadservice {

    @Value("${file.dir}")
    private String fileDir;

    public void fileUpload(MultipartFile img) {
        System.out.println("fileDir : " + fileDir);

        //원래 파일 이름 추출
        String originFileName = img.getOriginalFilename();

        //파일 이름으로 사용할 uuid 생성
        String uuid = UUID.randomUUID().toString();

        int dotIdx = originFileName.lastIndexOf(".");
        String ext = originFileName.substring(dotIdx);

        String savedFileName = uuid + ext;
        String SavedFilePath = fileDir + savedFileName;

        File file = new File(SavedFilePath);
        try {
            img.transferTo(file);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}

++++++++++++++


package com.green.board7.fileupload;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;



@RestController
@RequestMapping("/fileupload")
public class FileuploadController {
    private final Logger LOGGER;
    private Fileuploadservice service;

    @Autowired
    public FileuploadController(Fileuploadservice service) {
        LOGGER = LoggerFactory.getLogger(FileuploadController.class);
        this.service = service;
    }

    @PostMapping(consumes = {MediaType.APPLICATION_JSON_VALUE,MediaType.MULTIPART_FORM_DATA_VALUE})
    public void fileupload(@RequestPart MultipartFile img) {
        LOGGER.info("imgFileName: "+ img.getOriginalFilename());
        service.fileUpload(img);
    }
}




--------------------------------------------------------------------------------------------------------------
DB에 파일 

CREATE TABLE t_file(
	ifile INT UNSIGNED AUTO_INCREMENT,
	path VARCHAR(200) NOT NULL,
	uploader VARCHAR(10) NOT NULL,
	level_value INT UNSIGNED NOT NULL,
	PRIMARY KEY(ifile)
);

+++++++++++++
생성

package com.green.board7.fileupload.model;

import lombok.Data;

@Data
public class FileuploadInsDto {
    private String uploader;
    private int levelValue;
}

+++++++++++++++
수정

package com.green.board7.fileupload;

import com.green.board7.fileupload.model.FileuploadInsDto;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;



@RestController
@RequestMapping("/fileupload")
public class FileuploadController {
    private final Logger LOGGER;
    private Fileuploadservice service;

    @Autowired
    public FileuploadController(Fileuploadservice service) {
        LOGGER = LoggerFactory.getLogger(FileuploadController.class);
        this.service = service;
    }

    @PostMapping(consumes = {MediaType.APPLICATION_JSON_VALUE,MediaType.MULTIPART_FORM_DATA_VALUE})
    public void fileupload(@RequestPart FileuploadInsDto dto
                           , @RequestPart MultipartFile img) {
        LOGGER.info("dto : " + dto);
        LOGGER.info("imgFileName: "+ img.getOriginalFilename());
        service.fileUpload(img);
    }
}



+++++++++++
다운로드 및 설치
https://www.postman.com/downloads/?utm_source=postman-home

fileupload이미지확인
--------------------------------------------------------------------------------------------

package com.green.board7.fileupload.model;

import lombok.Builder;
import lombok.Getter;

@Builder
@Getter
public class FileEntity {
    private int ifile;
    private String path;
    private String uploader;
    private int levelValue;
}

+++++++++++++

package com.green.board7.fileupload;

import com.green.board7.fileupload.model.FileEntity;
import com.green.board7.fileupload.model.FileuploadInsDto;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.UUID;

@Service
public class Fileuploadservice {

    @Value("${file.dir}")
    private String fileDir;

    public void fileUpload( FileuploadInsDto dto, MultipartFile img) {
        System.out.println("fileDir : " + fileDir);

        //원래 파일 이름 추출
        String originFileName = img.getOriginalFilename();

        //파일 이름으로 사용할 uuid 생성
        String uuid = UUID.randomUUID().toString();

        int dotIdx = originFileName.lastIndexOf(".");
        String ext = originFileName.substring(dotIdx);

        String savedFileName = uuid + ext;
        String savedFilePath = fileDir + savedFileName;

        File file = new File(savedFilePath);
        try {
            img.transferTo(file);
        } catch (IOException e) {
            e.printStackTrace();
        }
        FileEntity entity = FileEntity.builder()
                                        .path(savedFilePath)
                                        .uploader(dto.getUploader())
                                        .levelValue(dto.getLevelValue())
                                        .build();
    }


}


---------------------------------------------------------------------------------------------------













































